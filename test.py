from single import Solver


def test_simple_matrix2():
    """
    Для проверки решения задачи, предлагаю следующий тестовый набор данных:

    capacity (вместимость рюкзака): 50
    T (ограничение по времени): 120 минут
    N (число самокатов): 5

    Массив приоритетов:
    3, 1, 2, 4, 5

    Матрица временных расстояний:
    [
    [0, 5, 10, 15, 20, 25,],
    [5, 0, 7, 12, 30, 18,   ],
    [10, 7, 0, 9, 25, 33,   ],
    [15, 12, 9, 0, 22, 19,  ],
    [20, 30, 25, 22, 0, 17, ],
    [25, 18, 33, 19, 17, 0 ]
    ]

    В этом тесте курьер имеет вместимость рюкзака для 50 аккумуляторов и ограничение по времени 120 минут. Всего имеется 5 самокатов, с приоритетами замены аккумуляторов 3, 1, 2, 4, 5. Матрица временных расстояний показывает время в минутах, необходимое для перемещения от начального местоположения курьера к каждому самокату и время перехода между самокатами.

    Ожидаемый результат: Решение должно определить оптимальный маршрут для курьера, учитывая приоритеты и время, и вывести его. Также должно быть указано, сколько аккумуляторов было заменено курьером в пределах ограниченного времени T.
    """

    M = [
        [
            0,
            5,
            10,
            15,
            20,
            25,
        ],
        [
            5,
            0,
            7,
            12,
            30,
            18,
        ],
        [
            10,
            7,
            0,
            9,
            25,
            33,
        ],
        [
            15,
            12,
            9,
            0,
            22,
            19,
        ],
        [
            20,
            30,
            25,
            22,
            0,
            17,
        ],
        [25, 18, 33, 19, 17, 0],
    ]
    S = Solver(
        50,
        100,
        5,
        [3, 1, 2, 4, 5],M
    )

    S.solve()
def test_simple_matrix():
    """
    Для проверки решения задачи, предлагаю следующий тестовый набор данных:

    capacity (вместимость рюкзака): 50
    T (ограничение по времени): 120 минут
    N (число самокатов): 5

    Массив приоритетов:
    3, 1, 2, 4, 5

    Матрица временных расстояний:
    [
    [0, 5, 10, 15, 20, 25,],
    [5, 0, 7, 12, 30, 18,   ],
    [10, 7, 0, 9, 25, 33,   ],
    [15, 12, 9, 0, 22, 19,  ],
    [20, 30, 25, 22, 0, 17, ],
    [25, 18, 33, 19, 17, 0 ]
    ]

    В этом тесте курьер имеет вместимость рюкзака для 50 аккумуляторов и ограничение по времени 120 минут. Всего имеется 5 самокатов, с приоритетами замены аккумуляторов 3, 1, 2, 4, 5. Матрица временных расстояний показывает время в минутах, необходимое для перемещения от начального местоположения курьера к каждому самокату и время перехода между самокатами.

    Ожидаемый результат: Решение должно определить оптимальный маршрут для курьера, учитывая приоритеты и время, и вывести его. Также должно быть указано, сколько аккумуляторов было заменено курьером в пределах ограниченного времени T.
    """

    M = [
        [
            0,
            5,
            10,
            15,
            20,
            25,
        ],
        [
            5,
            0,
            7,
            12,
            30,
            18,
        ],
        [
            10,
            7,
            0,
            9,
            25,
            33,
        ],
        [
            15,
            12,
            9,
            0,
            22,
            19,
        ],
        [
            20,
            30,
            25,
            22,
            0,
            17,
        ],
        [25, 18, 33, 19, 17, 0],
    ]
    S = Solver(
        50,
        10,
        5,
        [3, 1, 2, 4, 5],M
    )

    S.solve()

test_simple_matrix()